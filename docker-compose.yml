name: gerencie-service

volumes:
  gerencie_db_data: {}

services:
  # comentado pra rodar local
  # api:
  #   image: pedidos-service
  #   environment:
  #     PEDIDOS_PROFILE: dev
  #     PEDIDOS_DB_USER: postgres
  #     PEDIDOS_DB_PASSWORD: postgres
  #     PEDIDOS_DB_HOST: postgresql://db
  #     PEDIDOS_DB_PORT: 5432
  #     PORT: 8080
  #   networks:
  #     - pedidos-service-net
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - kafka
  #     - db

  db:
    image: postgres:17
    volumes:
      - gerencie_db_data:/var/lib/postgresql
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pedidosdb
    networks:
      - pedidos-service-net
    ports:
      - '5432:5432' # tirar expose dessa porta

  kafka0:
    image: "confluentinc/cp-enterprise-kafka:5.2.1"
    ports:
      - '9092:9092'
      - '29094:29094'
    depends_on:
      - zookeeper
    networks:
      - pedidos-service-net
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka0:29092,CONSUMER://kafka0:9092
      # ,KAFKA_UI://kafka0:29094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka0:29092,CONSUMER://localhost:9092
      # ,KAFKA_UI://kafka0:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONSUMER:PLAINTEXT,LISTENER_ALICE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 3s
      timeout: 30s
      retries: 6

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    networks:
      - pedidos-service-net
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

networks:
  pedidos-service-net:
    driver: bridge
